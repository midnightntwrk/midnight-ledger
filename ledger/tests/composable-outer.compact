// This file is part of midnight-ledger.
// Copyright (C) 2025 Midnight Foundation
// SPDX-License-Identifier: Apache-2.0
// Licensed under the Apache License, Version 2.0 (the "License");
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import CompactStandardLibrary;

ledger laggingValue: Opaque<"string">;

// These are temporary, to work around compact not yet having appropriate syntax for the call.
ledger tmpAddr: Bytes<32>;
ledger tmpEpComm: Bytes<32>;
witness tmpDoCall(): Opaque<"string">;
witness tmpCallRand(): Field;


export circuit update(): [] {
  const readValue = tmpDoCall();
  const cc = transientCommit<Opaque<"string">>(readValue, tmpCallRand());
  kernel.claimContractCall(tmpAddr, tmpEpComm, cc);
  laggingValue = disclose(readValue);
}
