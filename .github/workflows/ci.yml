name: Ledger Build and Test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  nix-build:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Maximize build space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h

      - name: Configure git rewrite
        run: |
          mkdir -p $HOME/.config/git
          echo '[url "https://github.com/"]' >> $HOME/.config/git/config
          echo '  insteadOf = "git@github.com:"' >> $HOME/.config/git/config
          echo '  insteadOf = "git@github.com/"' >> $HOME/.config/git/config
          echo '  insteadOf = "ssh://git@github.com/"' >> $HOME/.config/git/config

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

      - name: Install Nix
        uses: cachix/install-nix-action@a809471b5c7c913aa67bec8f459a11a0decc3fce # v31.6.2
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            extra-trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
            extra-substituters = https://cache.iog.io file://${{ runner.temp }}/nix-binary-cache
            accept-flake-config = true

      - name: Cache Nix
        uses: input-output-hk/actions/attic@e0990284d4e88052ddc376519731419354851a42
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          endpoint: https://attic.ci.iog.io
          cache: midnight-public
          access_token: ${{ secrets.ATTIC_CACHE_TOKEN }}

      - name: Configure cargo
        run: .github/scripts/configure-cargo.sh

      - name: Check license headers
        run: |
          ./scripts/check-licenses.sh

      - name: Build and Test
        run: |
          nix build -L --max-jobs 1

      - name: Add Homebrew and git bin to PATH for Yarn, verify git is installed
        run: |
          echo "/opt/homebrew/bin" >> $GITHUB_PATH
          echo "/usr/bin" >> $GITHUB_PATH
          which git
          git --version

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 22

      - name: Run integration tests
        run: |
          export MN_AXIOS=true
          set -o pipefail
          cd integration-tests
          yarn
          yarn lint
          yarn build
          yarn test:coverage:prepare
          nix develop .#ci -c yarn test:coverage | tee ./coverage.txt

      - name: Upload Logs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: logs-${{ matrix.os }}
          path: integration-tests/logs/

      #- name: Publish IT Test Report
      #  uses: mikepenz/action-junit-report@97744eca465b8df9e6e33271cb155003f85327f1
      #  if: success() || failure()
      #  with:
      #    check_name: 'IT Test Report - ${{ matrix.os }}'
      #    report_paths: '**/reports/test-*.xml'

      #- name: Publish Test Coverage
      #  uses: MishaKav/jest-coverage-comment@d74238813c33e6ea20530ff91b5ea37953d11c91
      #  with:
      #    title: 'Integration tests summary - ${{ matrix.os }}'
      #    unique-id-for-comment: ${{ matrix.os }}
      #    coverage-summary-path: ./integration-tests/coverage/coverage-summary.json
      #    junitxml-path: ./integration-tests/reports/test-report.xml
      #    coverage-path: ./integration-tests/coverage.txt

      #- name: Publish ITest Summary
      #  uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b
      #  if: always() && matrix.os != 'self-hosted'
      #  with:
      #   check_name: 'Test Results - ${{ matrix.os }}'
      #   files: |
      #     **/reports/test-*.xml

      #- name: Publish ITest Summary
      #  uses: EnricoMi/publish-unit-test-result-action/macos@170bf24d20d201b842d7a52403b73ed297e6645b
      #  if: always() && matrix.os == 'self-hosted'
      #  with:
      #   check_name: 'Test Results - ${{ matrix.os }}'
      #   files: |
      #     **/reports/test-*.xml

      #- name: Publish Test Report CTRF
      #  uses: ctrf-io/github-test-reporter@646f98cfc16c6f7a0e1f6100cabe2deb95dd2eef # v1.0.22
      #  if: always()
      #  with:
      #    title: Ledger WASM - Integration test results - ${{ matrix.os }}
      #    report-path: './integration-tests/reports/ctrf-report.json'
      #    pull-request-report: true
      #    overwrite-comment: true
      #    status-check: true
      #    comment-tag: '${{ github.workflow }}-${{ github.job }}'
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Test Results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # ratchet:actions/upload-artifact@v4
        if: always()
        with:
          name: "ledger-wasm-test-results-ctrf-${{ matrix.os }}"
          path: "./integration-tests/reports/ctrf-report.json"

      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: "ledger-wasm-test-results-junit-${{ matrix.os }}"
          path: ./integration-tests/reports/test-report.xml

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Configure git rewrite
        run: |
          mkdir -p $HOME/.config/git
          echo '[url "https://github.com/"]' >> $HOME/.config/git/config
          echo '  insteadOf = "git@github.com:"' >> $HOME/.config/git/config
          echo '  insteadOf = "git@github.com/"' >> $HOME/.config/git/config
          echo '  insteadOf = "ssh://git@github.com/"' >> $HOME/.config/git/config

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

      - name: Install Nix (2)
        uses: cachix/install-nix-action@a809471b5c7c913aa67bec8f459a11a0decc3fce # v31.6.2
        with:
          nix_path: nixpkgs=channel:nixos-unstable #trya
          extra_nix_config: |
            extra-trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
            extra-substituters = https://cache.iog.io file://${{ runner.temp }}/nix-binary-cache
            accept-flake-config = true

      - name: Cache Nix
        uses: input-output-hk/actions/attic@e0990284d4e88052ddc376519731419354851a42
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          endpoint: https://attic.ci.iog.io
          cache: midnight-public
          access_token: ${{ secrets.ATTIC_CACHE_TOKEN }}

      - name: Configure cargo
        run: .github/scripts/configure-cargo.sh

      - name: Cache dependencies
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1

      - name: Fix Nix permissions (needed on macos self hosted runner)
        run: |
          sudo mkdir -m 0755 -p /nix/var/nix/{profiles,gcroots}/per-user/$USER
          sudo chown -R $USER:nixbld /nix/var/nix/{profiles,gcroots}/per-user/$USER
        shell: bash # Ensure bash is used for these commands

      - name: Add Homebrew and git bin to PATH for Yarn, verify git is installed
        run: |
          echo "/opt/homebrew/bin" >> $GITHUB_PATH
          echo "/usr/bin" >> $GITHUB_PATH
          which git
          git --version

      # Cargo check the whole workspace with all features. This is important to
      # avoid bitrot of code that is feature gated behind non-default features
      # or in pkgs which aren't in Cargo.toml#default-members, since we don't
      # include --workspace or --all-features in ouor build-and-test recipe
      # below.
      - name: Cargo check (--workspace --all-features)
        run: MIDNIGHT_LEDGER_EXPERIMENTAL=1 nix develop .#ci -c cargo check --all-targets --workspace --all-features

      - name: Cargo clippy (--all-targets --workspace --all-features --all -- -Dwarnings -Aclippy::type_complexity -Aclippy::mutable_key_type -Aclippy::too_many_arguments)
        run: MIDNIGHT_LEDGER_EXPERIMENTAL=1 MIDNIGHT_PP='' cargo clippy --all-targets --workspace --all-features --all -- -Dwarnings -Aclippy::type_complexity -Aclippy::mutable_key_type -Aclippy::too_many_arguments

      - name: Build and Test (default features)
        run: |
          cargo install cargo2junit
          nix develop .#ci -c cargo test --release -- -Z unstable-options --format json --report-time --nocapture --test-threads=1 | tee test-results.json
          cat test-results.json | cargo2junit > ./target/test-results.xml
          cp test-results.json ./target/

      - name: Build and Test - Proof server (default features)
        run: |
          cd proof-server
          nix develop .#ci -c cargo test --release -- -Z unstable-options --format json --report-time --nocapture --test-threads=1 | tee test-results-proof-server.json
          cat test-results-proof-server.json | cargo2junit > ../target/test-results-proof-server.xml
          cp test-results-proof-server.json ../target/

      - name: Build Docs
        run: |
          nix run .#doc

      - name: Spellcheck comments
        run: |
          nix develop .#ci -c cargo spellcheck -j1

      #- name: Publish Test Report
      #  uses: mikepenz/action-junit-report@97744eca465b8df9e6e33271cb155003f85327f1
      #  if: success() || failure()
      #  with:
      #    check_name: 'Proof Server - JUnit Test Results - ${{ matrix.os }}'
      #    report_paths: '**/target/test-*.xml'

      #- name: Publish Test Summary
      #  uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b
      #  if: always() && matrix.os != 'self-hosted'
      #  with:
      #    check_name: 'Proof Server - Test Results - ${{ matrix.os }}'
      #    files: |
      #      **/target/test-*.xml

      #- name: Publish Test Summary
      #  uses: EnricoMi/publish-unit-test-result-action/macos@170bf24d20d201b842d7a52403b73ed297e6645b
      #  if: always() && matrix.os == 'self-hosted'
      #  with:
      #    check_name: 'Proof Server - Test Results - ${{ matrix.os }}'
      #    files: |
      #      **/target/test-*.xml

      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: "proof-server-test-results-${{ matrix.os }}"
          path: target/test-*
