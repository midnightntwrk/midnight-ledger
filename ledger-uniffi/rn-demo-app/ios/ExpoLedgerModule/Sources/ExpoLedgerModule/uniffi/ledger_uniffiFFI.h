// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    uint64_t capacity;
    uint64_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H
#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t, int8_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
typedef void (*UniffiForeignFutureFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE
typedef struct UniffiForeignFuture {
    uint64_t handle;
    UniffiForeignFutureFree _Nonnull free;
} UniffiForeignFuture;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
typedef struct UniffiForeignFutureStructU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t, UniffiForeignFutureStructU8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
typedef struct UniffiForeignFutureStructI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t, UniffiForeignFutureStructI8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
typedef struct UniffiForeignFutureStructU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t, UniffiForeignFutureStructU16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
typedef struct UniffiForeignFutureStructI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t, UniffiForeignFutureStructI16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
typedef struct UniffiForeignFutureStructU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t, UniffiForeignFutureStructU32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
typedef struct UniffiForeignFutureStructI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t, UniffiForeignFutureStructI32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
typedef struct UniffiForeignFutureStructU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t, UniffiForeignFutureStructU64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
typedef struct UniffiForeignFutureStructI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t, UniffiForeignFutureStructI64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
typedef struct UniffiForeignFutureStructF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t, UniffiForeignFutureStructF32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
typedef struct UniffiForeignFutureStructF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t, UniffiForeignFutureStructF64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
typedef struct UniffiForeignFutureStructPointer {
    void*_Nonnull returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructPointer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
typedef void (*UniffiForeignFutureCompletePointer)(uint64_t, UniffiForeignFutureStructPointer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
typedef struct UniffiForeignFutureStructRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t, UniffiForeignFutureStructRustBuffer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
typedef struct UniffiForeignFutureStructVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureStructVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t, UniffiForeignFutureStructVoid
    );

#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_CLONE_DUSTPARAMETERS
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_CLONE_DUSTPARAMETERS
void*_Nonnull uniffi_ledger_uniffi_fn_clone_dustparameters(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FREE_DUSTPARAMETERS
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FREE_DUSTPARAMETERS
void uniffi_ledger_uniffi_fn_free_dustparameters(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_DUST_GRACE_PERIOD_SECONDS
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_DUST_GRACE_PERIOD_SECONDS
int64_t uniffi_ledger_uniffi_fn_method_dustparameters_dust_grace_period_seconds(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_GENERATION_DECAY_RATE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_GENERATION_DECAY_RATE
uint32_t uniffi_ledger_uniffi_fn_method_dustparameters_generation_decay_rate(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_NIGHT_DUST_RATIO
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_NIGHT_DUST_RATIO
uint64_t uniffi_ledger_uniffi_fn_method_dustparameters_night_dust_ratio(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_SERIALIZE
RustBuffer uniffi_ledger_uniffi_fn_method_dustparameters_serialize(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_TIME_TO_CAP_SECONDS
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_TIME_TO_CAP_SECONDS
int64_t uniffi_ledger_uniffi_fn_method_dustparameters_time_to_cap_seconds(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_DUSTPARAMETERS_TO_STRING
RustBuffer uniffi_ledger_uniffi_fn_method_dustparameters_to_string(void*_Nonnull ptr, RustBuffer compact, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_CLONE_LEDGERPARAMETERS
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_CLONE_LEDGERPARAMETERS
void*_Nonnull uniffi_ledger_uniffi_fn_clone_ledgerparameters(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FREE_LEDGERPARAMETERS
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FREE_LEDGERPARAMETERS
void uniffi_ledger_uniffi_fn_free_ledgerparameters(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_LEDGERPARAMETERS_DUST
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_LEDGERPARAMETERS_DUST
void*_Nonnull uniffi_ledger_uniffi_fn_method_ledgerparameters_dust(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_LEDGERPARAMETERS_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_LEDGERPARAMETERS_SERIALIZE
RustBuffer uniffi_ledger_uniffi_fn_method_ledgerparameters_serialize(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_LEDGERPARAMETERS_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_LEDGERPARAMETERS_TO_STRING
RustBuffer uniffi_ledger_uniffi_fn_method_ledgerparameters_to_string(void*_Nonnull ptr, RustBuffer compact, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_LEDGERPARAMETERS_TRANSACTION_COST_MODEL
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_LEDGERPARAMETERS_TRANSACTION_COST_MODEL
void*_Nonnull uniffi_ledger_uniffi_fn_method_ledgerparameters_transaction_cost_model(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_CLONE_PROOFPREIMAGEVERSIONED
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_CLONE_PROOFPREIMAGEVERSIONED
void*_Nonnull uniffi_ledger_uniffi_fn_clone_proofpreimageversioned(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FREE_PROOFPREIMAGEVERSIONED
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FREE_PROOFPREIMAGEVERSIONED
void uniffi_ledger_uniffi_fn_free_proofpreimageversioned(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_PROOFPREIMAGEVERSIONED_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_PROOFPREIMAGEVERSIONED_SERIALIZE
RustBuffer uniffi_ledger_uniffi_fn_method_proofpreimageversioned_serialize(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_CLONE_PROOFVERSIONED
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_CLONE_PROOFVERSIONED
void*_Nonnull uniffi_ledger_uniffi_fn_clone_proofversioned(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FREE_PROOFVERSIONED
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FREE_PROOFVERSIONED
void uniffi_ledger_uniffi_fn_free_proofversioned(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_PROOFVERSIONED_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_PROOFVERSIONED_SERIALIZE
RustBuffer uniffi_ledger_uniffi_fn_method_proofversioned_serialize(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_CLONE_TRANSACTIONCOSTMODEL
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_CLONE_TRANSACTIONCOSTMODEL
void*_Nonnull uniffi_ledger_uniffi_fn_clone_transactioncostmodel(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FREE_TRANSACTIONCOSTMODEL
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FREE_TRANSACTIONCOSTMODEL
void uniffi_ledger_uniffi_fn_free_transactioncostmodel(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_TRANSACTIONCOSTMODEL_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_TRANSACTIONCOSTMODEL_SERIALIZE
RustBuffer uniffi_ledger_uniffi_fn_method_transactioncostmodel_serialize(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_TRANSACTIONCOSTMODEL_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_METHOD_TRANSACTIONCOSTMODEL_TO_STRING
RustBuffer uniffi_ledger_uniffi_fn_method_transactioncostmodel_to_string(void*_Nonnull ptr, RustBuffer compact, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_ADDRESS_FROM_KEY
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_ADDRESS_FROM_KEY
RustBuffer uniffi_ledger_uniffi_fn_func_address_from_key(RustBuffer key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_COIN_COMMITMENT
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_COIN_COMMITMENT
RustBuffer uniffi_ledger_uniffi_fn_func_coin_commitment(RustBuffer coin_info, RustBuffer coin_public_key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_COIN_NULLIFIER
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_COIN_NULLIFIER
RustBuffer uniffi_ledger_uniffi_fn_func_coin_nullifier(RustBuffer _coin_info, RustBuffer _coin_secret_key, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_COMMITMENT_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_COMMITMENT_FROM_BYTES
RustBuffer uniffi_ledger_uniffi_fn_func_commitment_from_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_CREATE_CHECK_PAYLOAD
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_CREATE_CHECK_PAYLOAD
RustBuffer uniffi_ledger_uniffi_fn_func_create_check_payload(void*_Nonnull preimage, RustBuffer ir, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_CREATE_PROVING_PAYLOAD
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_CREATE_PROVING_PAYLOAD
RustBuffer uniffi_ledger_uniffi_fn_func_create_proving_payload(void*_Nonnull preimage, RustBuffer overwrite_binding_input, RustBuffer key_material, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_CREATE_PROVING_TRANSACTION_PAYLOAD
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_CREATE_PROVING_TRANSACTION_PAYLOAD
RustBuffer uniffi_ledger_uniffi_fn_func_create_proving_transaction_payload(RustBuffer _tx_serialized, RustBuffer _proving_data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_CREATE_SHIELDED_COIN_INFO
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_CREATE_SHIELDED_COIN_INFO
RustBuffer uniffi_ledger_uniffi_fn_func_create_shielded_coin_info(RustBuffer token_type, int64_t value, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_DUST_PARAMETERS_DESERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_DUST_PARAMETERS_DESERIALIZE
void*_Nonnull uniffi_ledger_uniffi_fn_func_dust_parameters_deserialize(RustBuffer raw, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_DUST_PARAMETERS_NEW
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_DUST_PARAMETERS_NEW
void*_Nonnull uniffi_ledger_uniffi_fn_func_dust_parameters_new(uint64_t night_dust_ratio, uint32_t generation_decay_rate, int64_t dust_grace_period_seconds, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_FEE_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_FEE_TOKEN
RustBuffer uniffi_ledger_uniffi_fn_func_fee_token(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_HELLO
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_HELLO
RustBuffer uniffi_ledger_uniffi_fn_func_hello(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_INTENT_HASH_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_INTENT_HASH_FROM_BYTES
RustBuffer uniffi_ledger_uniffi_fn_func_intent_hash_from_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_LEDGER_PARAMETERS_DESERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_LEDGER_PARAMETERS_DESERIALIZE
void*_Nonnull uniffi_ledger_uniffi_fn_func_ledger_parameters_deserialize(RustBuffer raw, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_LEDGER_PARAMETERS_DUMMY_PARAMETERS
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_LEDGER_PARAMETERS_DUMMY_PARAMETERS
void*_Nonnull uniffi_ledger_uniffi_fn_func_ledger_parameters_dummy_parameters(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_NATIVE_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_NATIVE_TOKEN
RustBuffer uniffi_ledger_uniffi_fn_func_native_token(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_NONCE_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_NONCE_FROM_BYTES
RustBuffer uniffi_ledger_uniffi_fn_func_nonce_from_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_NULLIFIER_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_NULLIFIER_FROM_BYTES
RustBuffer uniffi_ledger_uniffi_fn_func_nullifier_from_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_PARSE_CHECK_RESULT
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_PARSE_CHECK_RESULT
RustBuffer uniffi_ledger_uniffi_fn_func_parse_check_result(RustBuffer result, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_PROOF_PREIMAGE_VERSIONED_DESERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_PROOF_PREIMAGE_VERSIONED_DESERIALIZE
void*_Nonnull uniffi_ledger_uniffi_fn_func_proof_preimage_versioned_deserialize(RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_PROOF_VERSIONED_DESERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_PROOF_VERSIONED_DESERIALIZE
void*_Nonnull uniffi_ledger_uniffi_fn_func_proof_versioned_deserialize(RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_PROVING_KEY_MATERIAL_NEW
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_PROVING_KEY_MATERIAL_NEW
RustBuffer uniffi_ledger_uniffi_fn_func_proving_key_material_new(RustBuffer prover_key, RustBuffer verifier_key, RustBuffer ir_source, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_PUBLIC_KEY_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_PUBLIC_KEY_FROM_BYTES
RustBuffer uniffi_ledger_uniffi_fn_func_public_key_from_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_SAMPLE_COIN_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_SAMPLE_COIN_PUBLIC_KEY
RustBuffer uniffi_ledger_uniffi_fn_func_sample_coin_public_key(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_SAMPLE_ENCRYPTION_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_SAMPLE_ENCRYPTION_PUBLIC_KEY
RustBuffer uniffi_ledger_uniffi_fn_func_sample_encryption_public_key(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_SAMPLE_INTENT_HASH
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_SAMPLE_INTENT_HASH
RustBuffer uniffi_ledger_uniffi_fn_func_sample_intent_hash(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_SHIELDED_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_SHIELDED_TOKEN
RustBuffer uniffi_ledger_uniffi_fn_func_shielded_token(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_SHIELDED_TOKEN_TYPE_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_SHIELDED_TOKEN_TYPE_FROM_BYTES
RustBuffer uniffi_ledger_uniffi_fn_func_shielded_token_type_from_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_TRANSACTION_COST_MODEL_DESERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_TRANSACTION_COST_MODEL_DESERIALIZE
void*_Nonnull uniffi_ledger_uniffi_fn_func_transaction_cost_model_deserialize(RustBuffer raw, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_TRANSACTION_COST_MODEL_DUMMY
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_TRANSACTION_COST_MODEL_DUMMY
void*_Nonnull uniffi_ledger_uniffi_fn_func_transaction_cost_model_dummy(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_TRANSACTION_HASH_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_TRANSACTION_HASH_FROM_BYTES
RustBuffer uniffi_ledger_uniffi_fn_func_transaction_hash_from_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_UNSHIELDED_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_UNSHIELDED_TOKEN
RustBuffer uniffi_ledger_uniffi_fn_func_unshielded_token(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_UNSHIELDED_TOKEN_TYPE_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_UNSHIELDED_TOKEN_TYPE_FROM_BYTES
RustBuffer uniffi_ledger_uniffi_fn_func_unshielded_token_type_from_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_USER_ADDRESS_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_USER_ADDRESS_FROM_BYTES
RustBuffer uniffi_ledger_uniffi_fn_func_user_address_from_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_WRAPPED_IR_NEW
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_FN_FUNC_WRAPPED_IR_NEW
RustBuffer uniffi_ledger_uniffi_fn_func_wrapped_ir_new(RustBuffer data, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUSTBUFFER_ALLOC
RustBuffer ffi_ledger_uniffi_rustbuffer_alloc(uint64_t size, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_ledger_uniffi_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUSTBUFFER_FREE
void ffi_ledger_uniffi_rustbuffer_free(RustBuffer buf, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUSTBUFFER_RESERVE
RustBuffer ffi_ledger_uniffi_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_U8
void ffi_ledger_uniffi_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_U8
void ffi_ledger_uniffi_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_U8
void ffi_ledger_uniffi_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_ledger_uniffi_rust_future_complete_u8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_I8
void ffi_ledger_uniffi_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_I8
void ffi_ledger_uniffi_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_I8
void ffi_ledger_uniffi_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_I8
int8_t ffi_ledger_uniffi_rust_future_complete_i8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_U16
void ffi_ledger_uniffi_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_U16
void ffi_ledger_uniffi_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_U16
void ffi_ledger_uniffi_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_ledger_uniffi_rust_future_complete_u16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_I16
void ffi_ledger_uniffi_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_I16
void ffi_ledger_uniffi_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_I16
void ffi_ledger_uniffi_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_I16
int16_t ffi_ledger_uniffi_rust_future_complete_i16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_U32
void ffi_ledger_uniffi_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_U32
void ffi_ledger_uniffi_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_U32
void ffi_ledger_uniffi_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_ledger_uniffi_rust_future_complete_u32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_I32
void ffi_ledger_uniffi_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_I32
void ffi_ledger_uniffi_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_I32
void ffi_ledger_uniffi_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_I32
int32_t ffi_ledger_uniffi_rust_future_complete_i32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_U64
void ffi_ledger_uniffi_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_U64
void ffi_ledger_uniffi_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_U64
void ffi_ledger_uniffi_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_ledger_uniffi_rust_future_complete_u64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_I64
void ffi_ledger_uniffi_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_I64
void ffi_ledger_uniffi_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_I64
void ffi_ledger_uniffi_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_I64
int64_t ffi_ledger_uniffi_rust_future_complete_i64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_F32
void ffi_ledger_uniffi_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_F32
void ffi_ledger_uniffi_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_F32
void ffi_ledger_uniffi_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_F32
float ffi_ledger_uniffi_rust_future_complete_f32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_F64
void ffi_ledger_uniffi_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_F64
void ffi_ledger_uniffi_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_F64
void ffi_ledger_uniffi_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_F64
double ffi_ledger_uniffi_rust_future_complete_f64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_POINTER
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_POINTER
void ffi_ledger_uniffi_rust_future_poll_pointer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_POINTER
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_POINTER
void ffi_ledger_uniffi_rust_future_cancel_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_POINTER
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_POINTER
void ffi_ledger_uniffi_rust_future_free_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_POINTER
void*_Nonnull ffi_ledger_uniffi_rust_future_complete_pointer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_ledger_uniffi_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_ledger_uniffi_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_ledger_uniffi_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_ledger_uniffi_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_POLL_VOID
void ffi_ledger_uniffi_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_CANCEL_VOID
void ffi_ledger_uniffi_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_FREE_VOID
void ffi_ledger_uniffi_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_RUST_FUTURE_COMPLETE_VOID
void ffi_ledger_uniffi_rust_future_complete_void(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_ADDRESS_FROM_KEY
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_ADDRESS_FROM_KEY
uint16_t uniffi_ledger_uniffi_checksum_func_address_from_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_COIN_COMMITMENT
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_COIN_COMMITMENT
uint16_t uniffi_ledger_uniffi_checksum_func_coin_commitment(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_COIN_NULLIFIER
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_COIN_NULLIFIER
uint16_t uniffi_ledger_uniffi_checksum_func_coin_nullifier(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_COMMITMENT_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_COMMITMENT_FROM_BYTES
uint16_t uniffi_ledger_uniffi_checksum_func_commitment_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_CREATE_CHECK_PAYLOAD
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_CREATE_CHECK_PAYLOAD
uint16_t uniffi_ledger_uniffi_checksum_func_create_check_payload(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_CREATE_PROVING_PAYLOAD
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_CREATE_PROVING_PAYLOAD
uint16_t uniffi_ledger_uniffi_checksum_func_create_proving_payload(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_CREATE_PROVING_TRANSACTION_PAYLOAD
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_CREATE_PROVING_TRANSACTION_PAYLOAD
uint16_t uniffi_ledger_uniffi_checksum_func_create_proving_transaction_payload(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_CREATE_SHIELDED_COIN_INFO
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_CREATE_SHIELDED_COIN_INFO
uint16_t uniffi_ledger_uniffi_checksum_func_create_shielded_coin_info(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_DUST_PARAMETERS_DESERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_DUST_PARAMETERS_DESERIALIZE
uint16_t uniffi_ledger_uniffi_checksum_func_dust_parameters_deserialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_DUST_PARAMETERS_NEW
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_DUST_PARAMETERS_NEW
uint16_t uniffi_ledger_uniffi_checksum_func_dust_parameters_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_FEE_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_FEE_TOKEN
uint16_t uniffi_ledger_uniffi_checksum_func_fee_token(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_HELLO
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_HELLO
uint16_t uniffi_ledger_uniffi_checksum_func_hello(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_INTENT_HASH_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_INTENT_HASH_FROM_BYTES
uint16_t uniffi_ledger_uniffi_checksum_func_intent_hash_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_LEDGER_PARAMETERS_DESERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_LEDGER_PARAMETERS_DESERIALIZE
uint16_t uniffi_ledger_uniffi_checksum_func_ledger_parameters_deserialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_LEDGER_PARAMETERS_DUMMY_PARAMETERS
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_LEDGER_PARAMETERS_DUMMY_PARAMETERS
uint16_t uniffi_ledger_uniffi_checksum_func_ledger_parameters_dummy_parameters(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_NATIVE_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_NATIVE_TOKEN
uint16_t uniffi_ledger_uniffi_checksum_func_native_token(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_NONCE_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_NONCE_FROM_BYTES
uint16_t uniffi_ledger_uniffi_checksum_func_nonce_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_NULLIFIER_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_NULLIFIER_FROM_BYTES
uint16_t uniffi_ledger_uniffi_checksum_func_nullifier_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_PARSE_CHECK_RESULT
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_PARSE_CHECK_RESULT
uint16_t uniffi_ledger_uniffi_checksum_func_parse_check_result(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_PROOF_PREIMAGE_VERSIONED_DESERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_PROOF_PREIMAGE_VERSIONED_DESERIALIZE
uint16_t uniffi_ledger_uniffi_checksum_func_proof_preimage_versioned_deserialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_PROOF_VERSIONED_DESERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_PROOF_VERSIONED_DESERIALIZE
uint16_t uniffi_ledger_uniffi_checksum_func_proof_versioned_deserialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_PROVING_KEY_MATERIAL_NEW
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_PROVING_KEY_MATERIAL_NEW
uint16_t uniffi_ledger_uniffi_checksum_func_proving_key_material_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_PUBLIC_KEY_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_PUBLIC_KEY_FROM_BYTES
uint16_t uniffi_ledger_uniffi_checksum_func_public_key_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_SAMPLE_COIN_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_SAMPLE_COIN_PUBLIC_KEY
uint16_t uniffi_ledger_uniffi_checksum_func_sample_coin_public_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_SAMPLE_ENCRYPTION_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_SAMPLE_ENCRYPTION_PUBLIC_KEY
uint16_t uniffi_ledger_uniffi_checksum_func_sample_encryption_public_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_SAMPLE_INTENT_HASH
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_SAMPLE_INTENT_HASH
uint16_t uniffi_ledger_uniffi_checksum_func_sample_intent_hash(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_SHIELDED_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_SHIELDED_TOKEN
uint16_t uniffi_ledger_uniffi_checksum_func_shielded_token(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_SHIELDED_TOKEN_TYPE_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_SHIELDED_TOKEN_TYPE_FROM_BYTES
uint16_t uniffi_ledger_uniffi_checksum_func_shielded_token_type_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_TRANSACTION_COST_MODEL_DESERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_TRANSACTION_COST_MODEL_DESERIALIZE
uint16_t uniffi_ledger_uniffi_checksum_func_transaction_cost_model_deserialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_TRANSACTION_COST_MODEL_DUMMY
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_TRANSACTION_COST_MODEL_DUMMY
uint16_t uniffi_ledger_uniffi_checksum_func_transaction_cost_model_dummy(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_TRANSACTION_HASH_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_TRANSACTION_HASH_FROM_BYTES
uint16_t uniffi_ledger_uniffi_checksum_func_transaction_hash_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_UNSHIELDED_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_UNSHIELDED_TOKEN
uint16_t uniffi_ledger_uniffi_checksum_func_unshielded_token(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_UNSHIELDED_TOKEN_TYPE_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_UNSHIELDED_TOKEN_TYPE_FROM_BYTES
uint16_t uniffi_ledger_uniffi_checksum_func_unshielded_token_type_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_USER_ADDRESS_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_USER_ADDRESS_FROM_BYTES
uint16_t uniffi_ledger_uniffi_checksum_func_user_address_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_WRAPPED_IR_NEW
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_FUNC_WRAPPED_IR_NEW
uint16_t uniffi_ledger_uniffi_checksum_func_wrapped_ir_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_DUST_GRACE_PERIOD_SECONDS
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_DUST_GRACE_PERIOD_SECONDS
uint16_t uniffi_ledger_uniffi_checksum_method_dustparameters_dust_grace_period_seconds(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_GENERATION_DECAY_RATE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_GENERATION_DECAY_RATE
uint16_t uniffi_ledger_uniffi_checksum_method_dustparameters_generation_decay_rate(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_NIGHT_DUST_RATIO
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_NIGHT_DUST_RATIO
uint16_t uniffi_ledger_uniffi_checksum_method_dustparameters_night_dust_ratio(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_SERIALIZE
uint16_t uniffi_ledger_uniffi_checksum_method_dustparameters_serialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_TIME_TO_CAP_SECONDS
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_TIME_TO_CAP_SECONDS
uint16_t uniffi_ledger_uniffi_checksum_method_dustparameters_time_to_cap_seconds(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_DUSTPARAMETERS_TO_STRING
uint16_t uniffi_ledger_uniffi_checksum_method_dustparameters_to_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_LEDGERPARAMETERS_DUST
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_LEDGERPARAMETERS_DUST
uint16_t uniffi_ledger_uniffi_checksum_method_ledgerparameters_dust(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_LEDGERPARAMETERS_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_LEDGERPARAMETERS_SERIALIZE
uint16_t uniffi_ledger_uniffi_checksum_method_ledgerparameters_serialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_LEDGERPARAMETERS_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_LEDGERPARAMETERS_TO_STRING
uint16_t uniffi_ledger_uniffi_checksum_method_ledgerparameters_to_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_LEDGERPARAMETERS_TRANSACTION_COST_MODEL
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_LEDGERPARAMETERS_TRANSACTION_COST_MODEL
uint16_t uniffi_ledger_uniffi_checksum_method_ledgerparameters_transaction_cost_model(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_PROOFPREIMAGEVERSIONED_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_PROOFPREIMAGEVERSIONED_SERIALIZE
uint16_t uniffi_ledger_uniffi_checksum_method_proofpreimageversioned_serialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_PROOFVERSIONED_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_PROOFVERSIONED_SERIALIZE
uint16_t uniffi_ledger_uniffi_checksum_method_proofversioned_serialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_TRANSACTIONCOSTMODEL_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_TRANSACTIONCOSTMODEL_SERIALIZE
uint16_t uniffi_ledger_uniffi_checksum_method_transactioncostmodel_serialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_TRANSACTIONCOSTMODEL_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_LEDGER_UNIFFI_CHECKSUM_METHOD_TRANSACTIONCOSTMODEL_TO_STRING
uint16_t uniffi_ledger_uniffi_checksum_method_transactioncostmodel_to_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_LEDGER_UNIFFI_UNIFFI_CONTRACT_VERSION
uint32_t ffi_ledger_uniffi_uniffi_contract_version(void
    
);
#endif

